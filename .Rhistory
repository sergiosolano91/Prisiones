ts_conde <- ts(ppl_conde, start = 1991, frequency = 12)
error = 2/sqrt(length(ppl_conde))
## Población total
# Calcular acf y pacf
acf_total <- as.data.frame(acf2(diff(diff(ts_total), lag = 12), max.lag = 60))
# Gráfica acf total
acf_total %>% ggplot() + geom_bar(aes(x = c(1:60), y = ACF), stat = "identity", fill = "steelblue") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("ACF Población total") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal()-> graf_acf_total
# Gráfica pacf total
acf_total %>% ggplot() + geom_bar(aes(x = c(1:60), y = PACF), stat = "identity", fill = "steelblue") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("PACF Población total") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal() -> graf_pacf_total
## Población sindicada
# Calcular acf y pacf
acf_sindi <- as.data.frame(acf2(diff(diff(ts_sindi), lag = 12), max.lag = 60))
# Gráfica acf sindicados
acf_sindi %>% ggplot() + geom_bar(aes(x = c(1:60), y = ACF), stat = "identity", fill = "steelblue1") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("ACF Población sindicada") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal() -> graf_acf_sindi
# Gráfica pacf sindicados
acf_sindi %>% ggplot() + geom_bar(aes(x = c(1:60), y = PACF), stat = "identity", fill = "steelblue1") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("PACF Población sindicada") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal() -> graf_pacf_sindi
## Población condenada
# Calcular acf y pacf
acf_conde <- as.data.frame(acf2(diff(diff(ts_conde), lag = 12), max.lag = 60))
# Gráfica acf condenados
acf_conde %>% ggplot() + geom_bar(aes(x = c(1:60), y = ACF), stat = "identity", fill = "steelblue2") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("ACF Población condenada") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + # Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 3,2,1,0,0,2, S = 12)
# Gráfica acf condenados
acf_conde %>% ggplot() + geom_bar(aes(x = c(1:60), y = ACF), stat = "identity", fill = "steelblue2") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("ACF Población condenada") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + # Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 3,2,1,0,0,2, S = 12)
# Gráfica acf condenados
acf_conde %>% ggplot() + geom_bar(aes(x = c(1:60), y = ACF), stat = "identity", fill = "steelblue2") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("ACF Población condenada") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal() -> graf_acf_conde
## Crear variables
# Población carcelaria total
ppl_sitjur %>% dplyr::filter(categoria == "total", !(is.na(valor))) -> ppl_total
ppl_total <- ppl_total$valor
ts_total <- ts(ppl_total, start = 1991, frequency = 12)
# Sindicados
ppl_sitjur %>% dplyr::filter(categoria == "sindicados", !(is.na(valor))) -> ppl_sindi
ppl_sindi <- ppl_sindi$valor
ts_sindi <- ts(ppl_sindi, start = 1991, frequency = 12)
# Condenados
ppl_sitjur %>% dplyr::filter(categoria == "condenados", !(is.na(valor))) -> ppl_conde
ppl_conde <- ppl_conde$valor
ts_conde <- ts(ppl_conde, start = 1991, frequency = 12)
error = 2/sqrt(length(ppl_conde))
## Población total
# Calcular acf y pacf
acf_total <- as.data.frame(acf2(diff(diff(ts_total), lag = 12), max.lag = 60))
# Gráfica acf total
acf_total %>% ggplot() + geom_bar(aes(x = c(1:60), y = ACF), stat = "identity", fill = "steelblue") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("ACF Población total") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal()-> graf_acf_total
# Gráfica pacf total
acf_total %>% ggplot() + geom_bar(aes(x = c(1:60), y = PACF), stat = "identity", fill = "steelblue") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("PACF Población total") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal() -> graf_pacf_total
## Población sindicada
# Calcular acf y pacf
acf_sindi <- as.data.frame(acf2(diff(diff(ts_sindi), lag = 12), max.lag = 60))
# Gráfica acf sindicados
acf_sindi %>% ggplot() + geom_bar(aes(x = c(1:60), y = ACF), stat = "identity", fill = "steelblue1") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("ACF Población sindicada") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal() -> graf_acf_sindi
# Gráfica pacf sindicados
acf_sindi %>% ggplot() + geom_bar(aes(x = c(1:60), y = PACF), stat = "identity", fill = "steelblue1") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("PACF Población sindicada") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal() -> graf_pacf_sindi
## Población condenada
# Calcular acf y pacf
acf_conde <- as.data.frame(acf2(diff(diff(ts_conde), lag = 12), max.lag = 60))
# Gráfica acf condenados
acf_conde %>% ggplot() + geom_bar(aes(x = c(1:60), y = ACF), stat = "identity", fill = "steelblue2") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("ACF Población condenada") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal() -> graf_acf_conde
# Gráfica pacf condenados
acf_conde %>% ggplot() + geom_bar(aes(x = c(1:60), y = PACF), stat = "identity", fill = "steelblue2") + scale_x_continuous(breaks = c(12,24,36,48,60)) + xlab("LAG") + ggtitle("PACF Población condenada") + ylim(c(-0.55,0.55)) + geom_hline(aes(yintercept = error), colour = "royalblue", linetype="dashed") + geom_hline(aes(yintercept = -error), colour = "royalblue", linetype="dashed") + theme_minimal() -> graf_pacf_conde
png(file = 'ACF_var_pob.png', height = 750, width = 500, res = 85)
grid.arrange(graf_acf_total, graf_pacf_total,graf_acf_sindi, graf_pacf_sindi,graf_acf_conde, graf_pacf_conde, ncol = 2)
#dev.copy(png,'ACF_var_pob')
dev.off()
grid.arrange(graf_acf_total, graf_pacf_total,graf_acf_sindi, graf_pacf_sindi,graf_acf_conde, graf_pacf_conde, ncol = 2)
arima_total <- sarima(ts_total,3,2,1,0,0,2, S = 12, details = FALSE)
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 3,2,1,0,0,2, S = 12)
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 3,2,1,0,0,2, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_total), date=as.Date(as.yearmon(time(ts_total))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico"))  + theme_minimal()
### Total
arima_total <- sarima(ts_total,1,1,1,0,0,2, S = 12, details = FALSE)
### Total
png(file = 'Arima_total_111002.png', height = 750, width = 500, res = 85)
sarima()
?sarima()
png(file = 'Arima_total_111002.png', height = 750, width = 500, res = 85)
arima_total <- sarima(ts_total,1,1,1,0,0,2, S = 12, details = FALSE)
dev.off()
png(file = 'Arima_total_111002.png', height = 750, width = 500, res = 85)
arima_total <- sarima(ts_total,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
png(file = 'Arima_total_111001.png', height = 750, width = 500, res = 85)
arima_total <- sarima(ts_total,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_total)
auto.arima(ts_total)
### Total Auto Arima
png(file = 'Arima_total_321002.png', height = 750, width = 500, res = 85)
arima_total_3 <- sarima(ts_total,3,2,1,0,0,2, S = 12, details = FALSE)
dev.off()
arima_total_3
arima_total_3$AIC
arima_total_2$AIC
arima_total_2 <- sarima(ts_total,1,1,1,0,0,1, S = 12, details = FALSE)
arima_total_2$AIC
arima_total_3
arima_total_3$ttable
library("xtable")
xtable(arima_total_3$ttable)
png(file = 'Arima_total_121002.png', height = 750, width = 500, res = 85)
arima_total_4 <- sarima(ts_total,1,2,1,0,0,2, S = 12, details = FALSE)
dev.off()
arima_total_4
Indicadores <- matrix(c(0,0,0,0,0,0,0,0,0,0,0),2)
Indicadores <- matrix(c(0,0,0,0,0,0,0,0,0,0,0,0),2)
Indicadores
Indicadores <- matrix(c(arima_total_1$AIC,0,0,0,0,0,0,0,0,0,0,0),ncol = 2)
arima_total_1 <- sarima(ts_total,1,1,1,0,0,2, S = 12, details = FALSE)
Indicadores <- matrix(c(arima_total_1$AIC,0,0,0,0,0,0,0,0,0,0,0),ncol = 2)
Indicadores
Indicadores <- matrix(c(arima_total_1$AIC,arima_total_$BIC,arima_total_2$AIC,arima_total_2$BIC,arima_total_3$AIC,arima_total_3$BIC,arima_total_4$AIC,arima_total_4$BIC),ncol = 2)
Indicadores <- matrix(c(arima_total_1$AIC,arima_total_1$BIC,arima_total_2$AIC,arima_total_2$BIC,arima_total_3$AIC,arima_total_3$BIC,arima_total_4$AIC,arima_total_4$BIC),ncol = 2)
Indicadores
Indicadores_df <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","1,2,1,0,0,2"),Indicadores)
Indicadores_df
?auto.arima()
auto.arima(ts_total, ic = "AIC")
auto.arima(ts_total, ic = "aic")
sarima(ts_total,3,2,1,0,0,2, S = 12, details = FALSE)
sarima
?sarima()
arima(ts_total,3,2,1,0,0,2, S = 12, details = FALSE)
sarima(ts_total,3,2,1,0,0,2, S = 12, details = FALSE)
sarima(gnpgr, 1, 0, 0)
data(gnpgr)
gnpgr = diff(log(gnp))
sarima(gnpgr, 1, 0, 0)
auto.arima(ts_total, ic = "AIC")
auto.arima(ts_total, ic = "aic")
Indicadores_df
Indicadores_df <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","(1,2,1,0,0,2)"),Indicadores)
colnames(Indicadores_df) <- c("ORDEN","AIC","AIC")
Indicadores_df
arima(ts_total, order = (1,1,1), seasonal = list(order = c(0L, 0L, 2L), period  = 12)
arima(ts_total, order = c(1,1,1), seasonal = list(order = c(0L, 0L, 2L), period  = 12)
arima(ts_total, order = c(1,1,1), seasonal = list(order = c(0L, 0L, 2L), period  = 12))
AIC(arima(ts_total, order = c(1,1,1), seasonal = list(order = c(0L, 0L, 2L), period  = 12)))
AIC(arima_total_1)
AIC(arima_total_1$fit)
AIC(arima_total_1$fit,arima_total_2$fit, arima_total_3$fit,arima_total_1$fit)
AIC(arima_total_1$fit,arima_total_2$fit, arima_total_3$fit,arima_total_4$fit)
BIC(arima_total_1$fit,arima_total_2$fit, arima_total_3$fit,arima_total_4$fit)
AIC_total <- AIC(arima_total_1$fit,arima_total_2$fit, arima_total_3$fit,arima_total_4$fit)
BIC_total <- BIC(arima_total_1$fit,arima_total_2$fit, arima_total_3$fit,arima_total_4$fit)
AIC_total
?AIC()
AIC_total <- extractAIC(arima_total_1$fit,arima_total_2$fit, arima_total_3$fit,arima_total_4$fit)
Indicadores_df <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","(1,2,1,0,0,2)"),AIC_total, BIC_total)
colnames(Indicadores_df) <- c("ORDEN","AIC","BIC")
Indicadores_df
arima_total <- sarima(ts_total,1,2,1,0,0,2, S = 12, details = FALSE)
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 3,2,1,0,0,2, S = 12)
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 3,2,1,0,0,2, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_total), date=as.Date(as.yearmon(time(ts_total))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico"))  + theme_minimal()
arima_total <- sarima(ts_total,1,1,1,0,0,2, S = 12, details = FALSE)
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 3,2,1,0,0,2, S = 12)
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 3,2,1,0,0,2, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_total), date=as.Date(as.yearmon(time(ts_total))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico"))  + theme_minimal()
# Proyección
forecast <- sarima.for(arima_total_4)
# Proyección
forecast <- sarima.for(arima_total_4)
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 1,2,1,0,0,2, S = 12)
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 1,2,1,0,0,2, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_total), date=as.Date(as.yearmon(time(ts_total))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico"))  + theme_minimal()
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 1,1,1,0,0,2, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_total), date=as.Date(as.yearmon(time(ts_total))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico"))  + theme_minimal()
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 1,2,1,0,0,2, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_total), date=as.Date(as.yearmon(time(ts_total))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico"))  + theme_minimal()
ts_sindi
colnames(Indicadores_df) <- c("ORDEN","AIC","BIC")
xtable("Indicadores_df")
class(Indicadores_df)
xtable(Indicadores_df)
AIC_total
Indicadores_df <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","(1,2,1,0,0,2)"),AIC_total$AIC, BIC_total$BIC)
xtable(Indicadores_df)
xtable(,caption="Criterios de ajuste para varios modelos",digits=c(rep(2)))
xtable(Indicadores_df,caption="Criterios de ajuste para varios modelos",digits=c(rep(2)))
xtable(Indicadores_df,caption="Criterios de ajuste para varios modelos",digits=c(0,0,0,0,0))
xtable(Indicadores_df,caption="Criterios de ajuste para varios modelos",digits=c(0,0,0,0))
xtable(Indicadores_df,caption="Criterios de ajuste para varios modelos",digits=c(1,1,1,1))
Indicadores_df <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","(1,2,1,0,0,2)"),round(AIC_total$AIC,2), BIC_total$BIC)
colnames(Indicadores_df) <- c("ORDEN","AIC","BIC")
xtable(Indicadores_df)
Indicadores_df <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","(1,2,1,0,0,2)"),round(AIC_total$AIC,2), round(BIC_total$BIC,2))
colnames(Indicadores_df) <- c("ORDEN","AIC","BIC")
Indicadores_df <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","(1,2,1,0,0,2)"),round(AIC_total$AIC,2), round(BIC_total$BIC,2))
xtable(Indicadores_df)
Indicadores_df <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","(1,2,1,0,0,2)"),round(AIC_total$AIC,2), round(BIC_total$BIC,2))
colnames(Indicadores_df) <- c("ORDEN","AIC","BIC")
xtable(Indicadores_df)
arima_total_4$fit
arima_total_4$fit[coefficients]
arima_total_4$fit[coefficients()]
arima_total_4$fit
a <- arima_total_4$fit
a
View(a)
a$coef
arima_total_4
arima_total_4$ttable
xtable(arima_total_4$ttable)
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 1,2,1,0,0,2, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_total), date=as.Date(as.yearmon(time(ts_total))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico"))  + theme_minimal()
xtable(arima_total_3$ttable, label = "sergio")
xtable(arima_total_3$ttable, label = "parámetros_321002", caption = "Parámetros del modelo (3,2,1,0,0,2)")
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico"))  + theme_minimal() -> graf_pry_total_4
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 1,2,1,0,0,2, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_total), date=as.Date(as.yearmon(time(ts_total))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico"))  + theme_minimal() -> graf_pry_total_4
graf_pry_total_4
ggsave("graf_pry_total_4.png")
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 1,2,1,0,0,2, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_total), date=as.Date(as.yearmon(time(ts_total))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico")) + xlab("Población carcelaria total") + theme_minimal() -> graf_pry_total_4
graf_pry_total_4
ggsave("graf_pry_total_4.png")
png(file = 'Arima_total_111002.png', height = 750, width = 500, res = 85)
arima_total_1 <- sarima(ts_total,1,1,1,0,0,2, S = 12, details = FALSE)
dev.off()
png(file = 'Arima_total_111001.png', height = 750, width = 500, res = 85)
arima_total_2 <- sarima(ts_total,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
png(file = 'Arima_sindi_111002.png', height = 750, width = 500, res = 85)
arima_total_1 <- sarima(ts_sindi,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
png(file = 'Arima_sindi_111002.png', height = 750, width = 500, res = 85)
arima_sindi_1 <- sarima(ts_sindi,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
png(file = 'Arima_total_111002.png', height = 750, width = 500, res = 85)
arima_total_1 <- sarima(ts_total,1,1,1,0,0,2, S = 12, details = FALSE)
dev.off()
png(file = 'Arima_sindi_111002.png', height = 750, width = 500, res = 85)
arima_sindi_1 <- sarima(ts_sindi,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
png(file = 'Arima_sindi_11101.png', height = 750, width = 500, res = 85)
arima_sindi_1 <- sarima(ts_sindi,2,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_sindi)
auto.arima(ts_sindi, ic = "aic")
arima_total_4 <- sarima(ts_total,0,1,1,0,0,0, S = 12, details = FALSE)
arima_sindi_4 <- sarima(ts_total,0,1,1,0,0,0, S = 12, details = FALSE)
arima_sindi_4
AIC_sindi <- AIC(arima_sindi_1$fit,arima_sindi_2$fit, arima_sindi_3$fit,arima_sindi_4$fit)
### sindicado 111001
png(file = 'Arima_sindi_11101.png', height = 750, width = 500, res = 85)
arima_sindi_1 <- sarima(ts_sindi,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
### Total 111001
png(file = 'Arima_sindi_211001.png', height = 750, width = 500, res = 85)
arima_sindi_2 <- sarima(ts_total,2,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_sindi, ic = "aic")
### Total Auto Arima
png(file = 'Arima_sindi_012001.png', height = 750, width = 500, res = 85)
arima_sindi_3 <- sarima(ts_total,0,1,2,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_total, ic = "aic")
### Total 121002
png(file = 'Arima_sindi_121002.png', height = 750, width = 500, res = 85)
arima_sindi_4 <- sarima(ts_total,0,1,1,0,0,0, S = 12, details = FALSE)
dev.off()
### sindicado 111001
png(file = 'Arima_sindi_11101.png', height = 750, width = 500, res = 85)
arima_sindi_1 <- sarima(ts_sindi,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
### Total 111001
png(file = 'Arima_sindi_211001.png', height = 750, width = 500, res = 85)
arima_sindi_2 <- sarima(ts_total,2,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_sindi, ic = "aic")
### Total Auto Arima
png(file = 'Arima_sindi_012001.png', height = 750, width = 500, res = 85)
arima_sindi_3 <- sarima(ts_total,0,1,2,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_total, ic = "aic")
### Total 121002
png(file = 'Arima_sindi_011000.png', height = 750, width = 500, res = 85)
arima_sindi_4 <- sarima(ts_total,0,1,1,0,0,0, S = 12, details = FALSE)
dev.off()
AIC_sindi <- AIC(arima_sindi_1$fit,arima_sindi_2$fit, arima_sindi_3$fit,arima_sindi_4$fit)
BIC_sindi <- BIC(arima_sindi_1$fit,arima_sindi_2$fit, arima_sindi_3$fit,arima_sindi_4$fit)
Indicadores_df <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","(1,2,1,0,0,2)"),round(AIC_sindi$AIC,2), round(BIC_sindi$BIC,2))
colnames(Indicadores_df) <- c("ORDEN","AIC","BIC")
#xtable(Indicadores_df)
#xtable(arima_total_4$ttable)
#xtable(arima_total_3$ttable, label = "parámetros_321002", caption = "Parámetros del modelo (3,2,1,0,0,2)")
### sindicado 111001
png(file = 'Arima_sindi_11101.png', height = 750, width = 500, res = 85)
arima_sindi_1 <- sarima(ts_sindi,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
### Total 111001
png(file = 'Arima_sindi_211001.png', height = 750, width = 500, res = 85)
arima_sindi_2 <- sarima(ts_sindi,2,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_sindi, ic = "aic")
### Total Auto Arima
png(file = 'Arima_sindi_012001.png', height = 750, width = 500, res = 85)
arima_sindi_3 <- sarima(ts_sindi,0,1,2,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_total, ic = "aic")
### Total 121002
png(file = 'Arima_sindi_011000.png', height = 750, width = 500, res = 85)
arima_sindi_4 <- sarima(ts_sindi,0,1,1,0,0,0, S = 12, details = FALSE)
dev.off()
AIC_sindi <- AIC(arima_sindi_1$fit,arima_sindi_2$fit, arima_sindi_3$fit,arima_sindi_4$fit)
BIC_sindi <- BIC(arima_sindi_1$fit,arima_sindi_2$fit, arima_sindi_3$fit,arima_sindi_4$fit)
Indicadores_df <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","(1,2,1,0,0,2)"),round(AIC_sindi$AIC,2), round(BIC_sindi$BIC,2))
colnames(Indicadores_df) <- c("ORDEN","AIC","BIC")
#xtable(Indicadores_df)
#xtable(arima_total_4$ttable)
#xtable(arima_total_3$ttable, label = "parámetros_321002", caption = "Parámetros del modelo (3,2,1,0,0,2)")
Indicadores_df_sindi <- cbind(c("(1,1,1,0,0,2)","(1,1,1,0,0,1)","(3,2,1,0,0,2)","(1,2,1,0,0,2)"),round(AIC_sindi$AIC,2), round(BIC_sindi$BIC,2))
Indicadores_df_sindi
colnames(Indicadores_df) <- c("ORDEN","AIC","BIC")
colnames(Indicadores_df_sindi) <- c("ORDEN","AIC","BIC")
Indicadores_df_sindi
Indicadores_df_sindi <- cbind(c("(1,1,1,0,0,1)","(2,1,1,0,0,1)","(0,1,1,0,0,1)","(0,1,1,0,0,0)"),round(AIC_sindi$AIC,2), round(BIC_sindi$BIC,2))
colnames(Indicadores_df_sindi) <- c("ORDEN","AIC","BIC")
Indicadores_df_sindi
auto.arima(ts_total, ic = "aic")
auto.arima(ts_sindi, ic = "aic")
Indicadores_df_sindi
arima_sindi_3 <- sarima(ts_sindi,0,1,2,0,0,1, S = 12, details = FALSE)
arima_sindi_3
auto.arima(ts_sindi, ic = "aic")
arima_sindi_3 <- sarima(ts_sindi,0,1,2,0,0,1, S = 12, details = FALSE)
arima_sindi_3
auto.arima(ts_sindi, ic = "aic")
### sindicado 111001
png(file = 'Arima_sindi_11101.png', height = 750, width = 500, res = 85)
arima_sindi_1 <- sarima(ts_sindi,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
### sindicado 211001
png(file = 'Arima_sindi_211001.png', height = 750, width = 500, res = 85)
arima_sindi_2 <- sarima(ts_sindi,2,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_sindi, ic = "aic")
### sindicado Auto Arima
png(file = 'Arima_sindi_012001.png', height = 750, width = 500, res = 85)
arima_sindi_3 <- sarima(ts_sindi,0,1,2,0,0,1, S = 12, details = FALSE)
dev.off()
### Total 121002
png(file = 'Arima_sindi_011000.png', height = 750, width = 500, res = 85)
arima_sindi_4 <- sarima(ts_sindi,0,1,1,0,0,0, S = 12, details = FALSE)
dev.off()
AIC_sindi <- AIC(arima_sindi_1$fit,arima_sindi_2$fit, arima_sindi_3$fit,arima_sindi_4$fit)
BIC_sindi <- BIC(arima_sindi_1$fit,arima_sindi_2$fit, arima_sindi_3$fit,arima_sindi_4$fit)
Indicadores_df_sindi <- cbind(c("(1,1,1,0,0,1)","(2,1,1,0,0,1)","(0,1,1,0,0,1)","(0,1,1,0,0,0)"),round(AIC_sindi$AIC,2), round(BIC_sindi$BIC,2))
colnames(Indicadores_df_sindi) <- c("ORDEN","AIC","BIC")
#xtable(Indicadores_df)
#xtable(arima_total_4$ttable)
#xtable(arima_total_3$ttable, label = "parámetros_321002", caption = "Parámetros del modelo (3,2,1,0,0,2)")
arima_sindi_4 <- sarima(ts_sindi,0,1,1,0,0,0, S = 12, details = FALSE)
### sindicado 111001
png(file = 'Arima_sindi_11101.png', height = 750, width = 500, res = 85)
arima_sindi_1 <- sarima(ts_sindi,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
### sindicado 211001
png(file = 'Arima_sindi_211001.png', height = 750, width = 500, res = 85)
arima_sindi_2 <- sarima(ts_sindi,2,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_sindi, ic = "aic")
### sindicado Auto Arima
png(file = 'Arima_sindi_012001.png', height = 750, width = 500, res = 85)
arima_sindi_3 <- sarima(ts_sindi,0,1,2,0,0,1, S = 12, details = FALSE)
dev.off()
### Total 121002
png(file = 'Arima_sindi_011000.png', height = 750, width = 500, res = 85)
arima_sindi_4 <- sarima(ts_sindi,0,1,1,0,0,0, S = 12, details = FALSE)
dev.off()
AIC_sindi <- AIC(arima_sindi_1$fit,arima_sindi_2$fit, arima_sindi_3$fit,arima_sindi_4$fit)
BIC_sindi <- BIC(arima_sindi_1$fit,arima_sindi_2$fit, arima_sindi_3$fit,arima_sindi_4$fit)
Indicadores_df_sindi <- cbind(c("(1,1,1,0,0,1)","(2,1,1,0,0,1)","(0,1,1,0,0,1)","(0,1,1,0,0,0)"),round(AIC_sindi$AIC,2), round(BIC_sindi$BIC,2))
colnames(Indicadores_df_sindi) <- c("ORDEN","AIC","BIC")
#xtable(Indicadores_df)
#xtable(arima_total_4$ttable)
#xtable(arima_total_3$ttable, label = "parámetros_321002", caption = "Parámetros del modelo (3,2,1,0,0,2)")
xtable(Indicadores_df)
xtable(Indicadores_df_sindi)
#xtable(arima_total_4$ttable)
xtable(arima_total_3$ttable, label = "parámetros_321002", caption = "Parámetros del modelo (3,2,1,0,0,2)")
#xtable(arima_total_4$ttable)
xtable(arima_sindi_3$ttable, label = "parámetros_321002", caption = "Parámetros del modelo (3,2,1,0,0,2)")
#xtable(arima_total_4$ttable)
xtable(arima_sindi_3$ttable, label = "parámetros_321002", caption = "Parámetros del modelo (0,1,1,0,0,1)")
#xtable(arima_total_4$ttable)
xtable(arima_sindi_3$ttable, label = "parámetros_sindi_011001", caption = "Parámetros del modelo (0,1,1,0,0,1)")
# Proyección
forecast <- sarima.for(ts_sindi,n.ahead = 36, 0,1,1,0,0,1, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_sindi), date=as.Date(as.yearmon(time(ts_sindi))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico")) + xlab("Población carcelaria sindicada") + theme_minimal() -> graf_pry_total_4
graf_pry_total_4
ggsave("graf_pry_sindi_3.png")
arima_sindi_1 <- sarima(ts_conde,1,1,1,0,0,1, S = 12, details = FALSE)
# Proyección
forecast <- sarima.for(ts_total,n.ahead = 36, 1,2,1,0,0,2, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_total), date=as.Date(as.yearmon(time(ts_total))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico")) + xlab("Población carcelaria total") + theme_minimal() -> graf_pry_total_4
graf_pry_total_4
ggsave("graf_pry_total_4.png")
auto.arima(ts_conde, ic = "aic")
arima_conde_2 <- sarima(ts_conde,2,1,1,0,0,1, S = 12, details = FALSE)
Indicadores_df_conde
Indicadores_df_conde
Indicadores_df_conde <- cbind(c("(1,1,1,0,0,1)","(2,1,1,0,0,1)","(0,1,1,0,0,1)","(0,1,1,0,0,0)"),round(AIC_conde$AIC,2), round(BIC_conde$BIC,2))
### condenada 111001
png(file = 'Arima_conde_11101.png', height = 750, width = 500, res = 85)
arima_conde_1 <- sarima(ts_conde,1,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
### condenado 211001
png(file = 'Arima_conde_211001.png', height = 750, width = 500, res = 85)
arima_conde_2 <- sarima(ts_conde,2,1,1,0,0,1, S = 12, details = FALSE)
dev.off()
auto.arima(ts_conde, ic = "aic")
### condenado Auto Arima
png(file = 'Arima_conde_012001.png', height = 750, width = 500, res = 85)
arima_conde_3 <- sarima(ts_conde,0,1,2,0,0,1, S = 12, details = FALSE)
dev.off()
### Total 121002
png(file = 'Arima_conde_011000.png', height = 750, width = 500, res = 85)
arima_conde_4 <- sarima(ts_conde,0,1,1,0,0,0, S = 12, details = FALSE)
dev.off()
AIC_conde <- AIC(arima_conde_1$fit,arima_conde_2$fit, arima_conde_3$fit,arima_conde_4$fit)
BIC_conde <- BIC(arima_conde_1$fit,arima_conde_2$fit, arima_conde_3$fit,arima_conde_4$fit)
Indicadores_df_conde <- cbind(c("(1,1,1,0,0,1)","(2,1,1,0,0,1)","(0,1,1,0,0,1)","(0,1,1,0,0,0)"),round(AIC_conde$AIC,2), round(BIC_conde$BIC,2))
colnames(Indicadores_df_conde) <- c("ORDEN","AIC","BIC")
xtable(Indicadores_df_conde)
#xtable(arima_total_4$ttable)
#xtable(arima_conde_3$ttable, label = "parámetros_conde_011001", caption = "Parámetros del modelo (0,1,1,0,0,1)")
Indicadores_df_conde
xtable(Indicadores_df_conde)
#xtable(arima_total_4$ttable)
xtable(arima_conde_1$ttable, label = "parámetros_conde_011001", caption = "Parámetros del modelo (0,1,1,0,0,1)")
# Proyección
forecast <- sarima.for(ts_conde,n.ahead = 36, 1,1,1,0,0,1, S = 12)
# data frame
forecast_frame <- data.frame(Proyección=as.matrix(forecast$pred),Error=as.matrix(forecast$se), date=as.Date(as.yearmon(time(forecast$pred)))) %>% mutate(lim_sup = Proyección+Error, lim_inf = Proyección - Error)
#data histórica
hist_frame <- data.frame(Historico=as.matrix(ts_conde), date=as.Date(as.yearmon(time(ts_conde))))
# ggplot
ggplot() + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección - 2*Error, ymax = Proyección+2*Error, fill = "2 sd"  ), fill = "grey90")  + geom_ribbon(data = forecast_frame, aes(x = date, ymin = Proyección -Error, ymax = Proyección+Error,fill = "1 sd"  ), fill = "grey80") + geom_line(data = forecast_frame, aes(x = date, y = Proyección, colour = "Proyección")) + geom_line(data = hist_frame, aes(x = date, y = Historico, colour = "Histórico")) + xlab("Población carcelaria condenada") + theme_minimal() -> graf_pry_conde_1
graf_pry_conde_1
ggsave("graf_pry_conde_1.png")
