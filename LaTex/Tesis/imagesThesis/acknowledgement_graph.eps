%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 307 616 539 713
%%LanguageLevel: 2
%%Creator: CorelDRAW
%%Title: acknowledgement_graph.eps
%%CreationDate: Sun Feb 22 12:15:41 2009
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW Versión 13.0.0.576
%Color profile:  Perfil genérico separaciones offset
/CorelIsEPS true def
%%BeginResource: procset wCorel3Dict 3.0 0
/wCorel3Dict 300 dict def wCorel3Dict begin
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/fill_color 6 array def/num_fill_inks 1 def/$o 0 def/$fil 0 def
/outl_color 6 array def/num_outl_inks 1 def/$O 0 def/$PF false def/$bkg false
def/$op false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def
/$stm matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1
}ifelse def/level2 get_ps_level 2 ge def/level3 get_ps_level 3 ge def
/is_distilling{/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse}bd/is_rip_separation{
is_distilling{false}{level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse}bd/is_current_sep_color{
is_separation{gsave false setoverprint 1 1 1 1 5 -1 roll findcmykcustomcolor 1
setcustomcolor currentgray 0 eq grestore}{pop false}ifelse}bd
/get_sep_color_index{dup length 1 sub 0 1 3 -1 roll{dup 3 -1 roll dup 3 -1 roll
get is_current_sep_color{exit}{exch pop}ifelse}for pop -1}bd/is_separation{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
is_rip_separation{true}{1 0 0 0 gsave setcmykcolor currentcmykcolor grestore
add add add 0 ne 0 1 0 0 gsave setcmykcolor currentcmykcolor grestore add add
add 0 ne 0 0 1 0 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne
0 0 0 1 gsave setcmykcolor currentcmykcolor grestore add add add 0 ne and and
and not}ifelse}ifelse}ifelse}bind def/is_composite{is_separation not
is_distilling or}bd/is_sim_devicen{level2 level3 not and{is_distilling
is_rip_separation or}{false}ifelse}bd/@PL{/LV where{pop LV 2 ge level2 not and
{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if level2{/@ssa{true setstrokeadjust}
bd}{/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c
/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N
/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}
bd/@J{@rs}bd/g{1 exch sub 0 0 0 1 null 1 set_fill_color/$fil 0 def}bd/G{1 sub
neg 0 0 0 1 null 1 set_outline_color}bd/set_fill_color{/fill_color exch def
/num_fill_inks fill_color length 6 idiv def/bFillDeviceN num_fill_inks 1 gt def
/$fil 0 def}bd/set_outline_color{/outl_color exch def/num_outl_inks outl_color
length 6 idiv def/bOutlDeviceN num_outl_inks 1 gt def}bd
/get_devicen_color_names{dup length 6 idiv dup 5 mul exch getinterval}bd
/get_devicen_color_specs{dup length 6 idiv dup 4 mul getinterval}bd
/get_devicen_color{dup length 6 idiv 0 exch getinterval}bd/mult_devicen_color{
/colorarray exch def/mult_vals exch def 0 1 mult_vals length 1 sub{colorarray
exch dup mult_vals exch get exch dup colorarray exch get 3 -1 roll mul put}for
colorarray}bd/combine_devicen_colors{/colorarray2 exch def/colorarray1 exch def
/num_inks1 colorarray1 length 6 idiv def/num_inks2 colorarray2 length 6 idiv
def/num3 0 def/colorarray3[num_inks1 num_inks2 add 6 mul{0}repeat]def 0 1
num_inks1 1 sub{colorarray1 exch get colorarray3 num3 3 -1 roll put/num3 num3 1
add def}for 0 1 num_inks2 1 sub{colorarray2 exch get colorarray3 num3 3 -1 roll
put/num3 num3 1 add def}for colorarray1 num_inks1 dup 4 mul getinterval
colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 4 mul add def
colorarray2 num_inks2 dup 4 mul getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 4 mul add def colorarray1 num_inks1 dup 5 mul
exch getinterval colorarray3 num3 3 -1 roll putinterval/num3 num3 num_inks1 add
def colorarray2 num_inks2 dup 5 mul exch getinterval colorarray3 num3 3 -1 roll
putinterval/num3 num3 num_inks2 add def colorarray3}bd/get_devicen_color_spec{
/colorant_index exch def/colorarray exch def/ncolorants colorarray length 6
idiv def[colorarray colorant_index get colorarray ncolorants colorant_index 4
mul add 4 getinterval aload pop colorarray ncolorants 5 mul colorant_index add
get]}bd/set_devicen_color{level3{/colorarray exch def/numcolorants colorarray
length 6 idiv def colorarray get_devicen_color_specs/tint_params exch def[
/DeviceN colorarray get_devicen_color_names/DeviceCMYK{tint_params
CorelTintTransformFunction}]setcolorspace colorarray get_devicen_color aload
pop setcolor}{/DeviceCMYK setcolorspace devicen_to_cmyk aload pop pop @tc_5
setprocesscolor_5}ifelse}bd/sf{/bmp_fill_fg_color xd}bd/i{dup 0 ne{setflat}
{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld
/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm
exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd
/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp
xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}{$dsa}ifelse $SCP @ss
}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}
ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp
}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch
dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}
bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/devicen_to_cmyk{/convertcolor exch def convertcolor
get_devicen_color aload pop convertcolor get_devicen_color_specs
CorelTintTransformFunction}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld
/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2
systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def
/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get
def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/findcmykcustomcolor where{pop}{
/findcmykcustomcolor{5 array astore}bd}ifelse/Corelsetcustomcolor_exists false
def/setcustomcolor where{pop/Corelsetcustomcolor_exists true def}if CorelIsSeps
true eq CorelIsInRIPSeps false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{dup(CorelRegistrationColor)eq{5 rp 1 exch sub
setregcolor}{findcmykcustomcolor exch setcustomcolor}ifelse}ifelse SepMode_5 0
eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/separate_color{
SepMode_5 0 ne{[exch/colorarray_sep exch def/ink_num -1 def colorarray_sep
length 6 idiv 1 gt{colorarray_sep get_devicen_color_names dup length 1 sub 0 1
3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get CurrentInkName_5 eq{/ink_num exch
def}{pop}ifelse}for pop ink_num -1 ne{colorarray_sep ink_num
get_devicen_color_spec aload pop pop SepsColor not{pop pop pop pop 1 0 0 0 5 -1
roll}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 5 get $ink_5 4 eq{
CurrentInkName_5 eq{colorarray_sep aload pop pop SepsColor not{pop pop pop pop
0 0 0 1}if null}{0 0 0 0 0 null}ifelse}{colorarray_sep 0 get colorarray_sep
$ink_5 1 add get 3 -1 roll null eq{0 0 0 4 -1 roll SepsColor{4 $ink_5 1 add
roll}if null}{pop pop 0 0 0 0 0 null}ifelse}ifelse}ifelse]}if}bd
/separate_cmyk_color{$ink_5 -1 ne{[exch aload pop 3 $ink5 sub index
/colorarray_sep exch def/ink_num -1 def colorarray_sep get_devicen_color_names
dup length 1 sub 0 1 3 -1 roll{exch dup 3 -1 roll dup 3 1 roll get
CurrentInkName_5 eq{/ink_num exch def}{pop}ifelse}for pop ink_num -1 ne{[
colorarray_sep ink_num get_devicen_color_spec aload pop]}{[0 0 0 0 0 null]
}ifelse}if}bd/set_current_color{dup type/booleantype eq{dup currentoverprint ne
{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse/cur_color exch def
/nNumColors cur_color length 6 idiv def nNumColors 1 eq{cur_color 5 get
(CorelRegistrationColor)eq{cur_color aload pop 5 rp 1 exch sub setregcolor}{
SepMode_5 0 eq{cur_color aload pop dup null eq{pop @tc_5 setprocesscolor_5}{
findcmykcustomcolor exch setcustomcolor}ifelse}{cur_color separate_color aload
pop pop @tc_5 setprocesscolor_5}ifelse}ifelse}{SepMode_5 0 eq{is_distilling
is_rip_separation or{cur_color set_devicen_color}{cur_color devicen_to_cmyk
setprocesscolor_5}ifelse}{cur_color separate_color aload pop pop @tc_5
setprocesscolor_5}ifelse}ifelse SepMode_5 0 eq{true}{GetGry 1 eq
currentoverprint and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}
def}{/ColorImage{/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd
/daqG xd/daqR xd pop pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK
xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK
pop}repeat}ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length
3 div 1 sub{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}
for $dat 0 $dat length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4
div 1 sub{dup 4 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div
$dat 3 index 2 add get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length ncolors idiv
getinterval}if}ifelse}image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll null 6
array astore currentoverprint set_current_color/$ffpnt xd}bd/currentcmykcolor{
GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd/currentrgbcolor{
currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d fill_color $o set_current_color pop $ctm setmatrix
72 1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{level3{fill_color $o
set_current_color{wfill}{@np}ifelse}{/overprint_flag $o def is_distilling
is_rip_separation or{0 1 num_fill_inks 1 sub{dup 0 gt{/overprint_flag true def
}if fill_color exch get_devicen_color_spec overprint_flag set_current_color{
@gs wfill @gr}{@np exit}ifelse}for}{fill_color overprint_flag set_current_color
{@gs wfill @gr}{@np exit}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{$dsf
$dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix
$SDF{$SCF $SCA $SCP @ss}if level3{outl_color $O set_current_color{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}{/overprint_flag $O def
is_distilling is_rip_separation or{0 1 num_outl_inks 1 sub{dup 0 gt{
/overprint_flag true def}if outl_color exch get_devicen_color_spec
overprint_flag set_current_color{matrix currentmatrix $ptm concat @gs stroke
@gr setmatrix}{@np exit}ifelse}for}{outl_color overprint_flag set_current_color
{matrix currentmatrix $ptm concat @gs stroke @gr setmatrix}{@np exit}ifelse
}ifelse}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S
}bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore
/$Prm xd}bd/tcc{@cc}def/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5
(Composite)eq{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{
CurrentInkName_5(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2
def}{CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}
ifelse}ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000
-72000 l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer
/exec cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add
def}bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{
eax}ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict
/pdfmark known not{/pdfmark/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}
ifelse}bd level2{/setregcolor{/neg_flag exch def[/Separation/All/DeviceCMYK{
dup dup dup}]setcolorspace 1.0 neg_flag sub setcolor}bd}{/setregcolor{1 exch
sub dup dup dup setcmykcolor}bd}ifelse/CorelTintTransformFunction{
/colorantSpecArray exch def/nColorants colorantSpecArray length 4 idiv def
/inColor nColorants 1 add 1 roll nColorants array astore def/outColor 4 array
def 0 1 3{/nOutInk exch def 1 0 1 nColorants 1 sub{dup inColor exch get exch 4
mul nOutInk add colorantSpecArray exch get mul 1 exch sub mul}for 1 exch sub
outColor nOutInk 3 -1 roll put}for outColor aload pop}bind def
% Copyright (c)1992-2005 Corel Corporation
% All rights reserved.     v13 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{bmp_fill_fg_color $O set_current_color/$frg xd}{/$frg false
def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{fill_color set_current_color pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq
$ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi
$ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string
def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def/bImgDeviceN false def/nNumInksDeviceN 0 def
/sNamesDeviceN[]def/tint_params[]def level2{/@I_2{@sm @gs @ii @np/$ury xd/$urx
xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul
8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}
{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly
sub scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0
1 0 1 0 1 0 1]}ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt
{$hei}{0}ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq
{/DCTDecode filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse
level2{/@I_2D{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd
/$hei xd/$wid xd $ngx/scanline $wid $bts mul $ncl mul 8 div ceiling cvi string
def/readscanline{currentfile scanline readhexstring pop}bind def level3{[
/DeviceN sNamesDeviceN/DeviceCMYK{tint_params CorelTintTransformFunction}]
setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[nNumInksDeviceN{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0
gt{$hei}{0}ifelse]def/DataSource{readscanline}def currentdict end image}{
/scanline_height $lly $ury sub 1 sub $hei div def/plate_scanline $wid string
def/cmyk_scanline $wid 4 mul string def is_distilling is_rip_separation or{
/bSimDeviceN true def}{/bSimDeviceN false def}ifelse/scanline_img_dict 8 dict
begin/ImageType 1 def/Width $wid def/Height 1 def/BitsPerComponent $bts def
/Decode bSimDeviceN{[0 1]}{[0 1 0 1 0 1 0 1]}ifelse def/ImageMatrix[$wid 0 0 1
neg 0 1]def/DataSource bSimDeviceN{plate_scanline}{cmyk_scanline}ifelse def
currentdict end def 0 1 $hei 1 sub{@gs/nScanIndex exch def readscanline pop
/$t_lly $ury $lly scanline_height nScanIndex mul sub sub ceiling cvi def
/$t_ury $t_lly scanline_height sub ceiling cvi def bSimDeviceN{0 1 $ncl 1 sub{
@gs/nInkIndex exch def 0 1 plate_scanline length 1 sub{dup $ncl mul nInkIndex
add scanline exch get plate_scanline 3 1 roll put}for[0 1 $ncl 1 sub{nInkIndex
eq{1.0}{0.0}ifelse}for]/sepTintTransformParams exch def[/Separation
sNamesDeviceN nInkIndex get/DeviceCMYK{sepTintTransformParams aload pop
tint_params CorelTintTransformFunction @tc_5}]setcolorspace $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale nInkIndex 0 eq currentoverprint not and{false
setoverprint}{true setoverprint}ifelse scanline_img_dict image @gr}for}{0 1
$wid 1 sub{dup $ncl mul scanline exch $ncl getinterval 0 1 $ncl 1 sub{2 copy
get 255 div 3 1 roll pop}for pop tint_params CorelTintTransformFunction 5 -1
roll cmyk_scanline exch 0 1 3{3 1 roll 2 copy 5 -1 roll dup 8 exch sub index
255 mul cvi 3 1 roll exch 4 mul add exch put}for 6 rp}for/DeviceCMYK
setcolorspace $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale
scanline_img_dict image}ifelse @gr}for}ifelse $SDF{$dsf $dsa $dsp @ss}if @gr
$ctm setmatrix}bd}{/@I_2D{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury xd/$urx xd/$lly
xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx bImgDeviceN{[/DeviceN sNamesDeviceN/DeviceCMYK{
tint_params CorelTintTransformFunction}]}{$ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse}ifelse setcolorspace $llx $lly Tl $urx
$llx sub $ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin
/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def
/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}
ifelse]def/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode
filter}{COMP 2 eq{/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7
dict def MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop bImgDeviceN{@I_2D}{@I_2}ifelse}{11 index
1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
/disable_raster_output{/@BMP load/old_raster_func exch bind def/@BMP{8 rp/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi string def 0 1 $hei 1 sub{currentfile scanline
readhexstring pop pop pop}for}def}bd/enable_raster_output{/old_raster_func
where{pop/old_raster_func load/@BMP exch bd}if}bd
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel3Dict begin
@BeginSysCorelDict
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 1 0
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
307.39294 615.63685 539.31175 713.81650 @E
/$fm 1 def
 0 O 0 @g
[ 1.00 0.00 0.00 0.00 1.00 null ] set_fill_color
0 J 0 j 22.925585626053735 setmiterlimit
[] 0 d 0 R 0 @G
[ 1.00 0.00 0.00 0.00 1.00 null ] set_outline_color
0 0.21600 0.21600 0.00000 @w
539.27405 644.70274 m
534.20740 644.70274 533.65011 645.40403 530.78400 646.93672 c
527.91789 648.46970 525.21732 650.43694 522.68400 652.83676 C
492.48397 650.23682 L
490.28400 651.23688 L
470.08403 640.23676 L
468.75061 637.03672 466.28419 635.43685 462.68419 635.43685 c
461.21726 635.43685 459.75061 635.90343 458.28397 636.83688 C
458.28397 634.03682 457.31735 631.80340 455.38413 630.13691 c
453.45061 628.47014 451.35071 627.63676 449.08413 627.63676 c
448.28391 627.63676 447.45080 627.27024 446.58397 626.53691 c
445.71742 625.80359 444.85058 625.00337 443.98403 624.13682 c
443.11748 623.27027 442.18403 622.47005 441.18397 621.73672 c
440.18391 621.00340 439.15068 620.63688 438.08400 620.63688 c
436.48413 620.63688 434.95058 621.23669 433.48394 622.43688 C
431.48409 619.10334 429.41735 617.43685 427.28400 617.43685 c
425.01742 617.43685 422.68394 618.23679 420.28413 619.83666 c
418.95071 620.77011 417.75080 621.07002 416.68413 620.73666 c
415.61745 620.40359 414.58394 619.87011 413.58416 619.13679 c
412.58409 618.40346 411.61748 617.63669 410.68403 616.83676 c
409.75058 616.03682 408.75080 615.63685 407.68413 615.63685 c
405.95074 615.63685 404.38403 616.27011 402.98400 617.53691 c
401.58397 618.80343 400.88409 620.17002 400.88409 621.63666 C
398.08403 621.63666 395.61732 622.50350 393.48397 624.23688 c
391.35061 625.97027 390.28394 627.50353 390.28394 628.83666 C
389.75074 628.83666 388.85074 628.57020 387.58394 628.03672 c
386.31742 627.50353 385.41742 627.23679 384.88394 627.23679 c
383.68403 627.23679 382.68397 627.67020 381.88403 628.53676 c
381.08409 629.40359 380.31732 630.37020 379.58400 631.43688 c
378.85068 632.50356 378.21742 633.47017 377.68394 634.33672 c
377.15074 635.20356 376.61726 635.63669 376.08406 635.63669 c
375.81732 635.63669 375.35074 635.60353 374.68403 635.53691 c
374.01732 635.47002 373.48413 635.43685 373.08387 635.43685 c
371.75074 635.43685 370.35071 636.23679 368.88406 637.83694 c
367.41742 639.43682 366.68409 640.90346 366.68409 642.23688 c
366.68409 645.17017 365.01732 647.37014 361.68406 648.83679 c
358.35052 650.30343 352.55055 652.17005 344.28387 654.43691 C
343.28409 652.83676 L
334.88391 654.43691 L
333.55077 650.30343 332.38403 647.60343 331.38397 646.33691 c
330.38391 645.07011 329.28406 644.43685 328.08387 644.43685 c
325.68406 644.43685 322.78394 644.73676 319.38406 645.33685 c
313.46391 646.38170 308.55373 647.47162 307.39294 647.78854 C
307.39550 712.73282 L
315.72794 711.26249 311.59984 712.16220 319.88409 710.43676 c
326.28331 709.10391 331.95061 707.73676 336.88403 706.33672 c
341.81745 704.93698 344.28387 703.70362 344.28387 702.63694 C
343.28409 701.23691 L
348.21723 699.63676 350.68394 698.37024 350.68394 697.43679 C
355.21739 694.77024 359.68394 693.43682 364.08387 693.43682 c
369.48387 693.43682 l
369.75061 693.43682 370.51739 693.37020 371.78391 693.23698 c
373.05071 693.10346 373.75058 693.03685 373.88409 693.03685 c
374.68403 693.03685 376.91745 693.87024 380.58406 695.53672 c
384.25068 697.20350 389.75074 699.70337 397.08397 703.03691 c
400.15077 704.37005 404.08413 705.33694 408.88403 705.93676 c
413.68394 706.53685 419.21745 706.83676 425.48400 706.83676 c
426.01748 706.83676 426.88403 706.73698 428.08394 706.53685 c
429.28413 706.33672 430.51748 706.17005 431.78400 706.03682 c
433.05080 705.90359 434.31732 705.73691 435.58413 705.53679 c
436.85065 705.33694 437.81726 705.23688 438.48397 705.23688 c
438.88394 705.23688 439.78394 705.03676 441.18397 704.63679 c
442.58400 704.23682 444.15071 703.80340 445.88409 703.33682 c
447.61748 702.87024 449.21735 702.43682 450.68400 702.03685 c
452.15065 701.63688 453.08409 701.37014 453.48406 701.23691 c
461.21726 699.10356 471.15071 696.70346 483.28413 694.03691 C
484.08406 695.23682 L
517.28400 703.03691 l
517.55074 703.17014 518.08422 703.67017 518.88416 704.53672 c
519.68409 705.40356 520.55065 706.37017 521.48409 707.43685 c
523.48422 710.63688 526.65109 712.60441 530.98413 713.33688 c
533.14980 713.70312 536.60098 713.70312 539.31175 713.81650 C
539.27405 644.70274 L
@c
492.68409 668.43694 m
492.68409 676.83685 490.35061 684.37020 485.68394 691.03672 C
480.08409 692.37014 475.51748 693.40337 471.98409 694.13698 c
468.45071 694.87030 465.31729 695.53672 462.58413 696.13682 c
459.85068 696.73691 457.21729 697.40362 454.68397 698.13694 c
452.15065 698.87027 449.01751 699.90350 445.28400 701.23691 c
441.68400 702.43682 439.48403 703.03691 438.68409 703.03691 c
438.28413 703.03691 436.28400 702.30359 432.68400 700.83694 c
429.08400 699.37030 425.25071 697.60346 421.18413 695.53672 c
417.11726 693.47027 413.41748 691.20340 410.08394 688.73698 c
406.75068 686.27027 405.08391 684.03685 405.08391 682.03672 c
405.08391 681.37030 405.41726 680.50346 406.08397 679.43679 c
406.75068 678.37011 407.08403 677.50356 407.08403 676.83685 c
407.08403 676.17014 406.68406 675.47027 405.88413 674.73694 c
405.08391 674.00362 404.18391 673.23685 403.18413 672.43691 c
402.18406 671.63669 401.28406 670.87020 400.48413 670.13688 c
399.68391 669.40356 399.28394 668.83691 399.28394 668.43694 c
399.28394 667.77024 400.75058 667.43688 403.68387 667.43688 c
403.95061 667.43688 404.61732 667.67017 405.68400 668.13676 c
406.75068 668.60362 407.95058 669.17027 409.28400 669.83669 c
410.61742 670.50340 411.88394 671.13694 413.08413 671.73676 c
414.28403 672.33685 415.21748 672.83688 415.88391 673.23685 c
416.68413 673.63682 417.81742 674.40359 419.28406 675.53688 c
420.75071 676.67017 422.38403 677.80346 424.18403 678.93676 c
425.98403 680.07005 427.81748 681.10356 429.68409 682.03672 c
431.55071 682.97017 433.28409 683.43676 434.88397 683.43676 c
436.88409 683.43676 439.15068 682.70343 441.68400 681.23679 C
441.68400 681.23679 442.55083 680.57008 444.28394 679.23694 c
446.01732 677.90353 447.98400 676.43688 450.18397 674.83672 c
452.38394 673.23685 454.51729 671.77020 456.58403 670.43679 c
458.65077 669.10337 460.01735 668.43694 460.68406 668.43694 c
460.95080 668.43694 461.45083 668.53672 462.18416 668.73685 c
462.91748 668.93669 463.35061 669.03676 463.48413 669.03676 c
465.08400 669.03676 466.58409 669.93676 467.98413 671.73676 c
469.38416 673.53676 470.81735 674.43676 472.28400 674.43676 c
472.68397 674.43676 472.88409 673.90356 472.88409 672.83688 c
472.88409 671.77020 471.91748 670.43679 469.98397 668.83691 c
468.05074 667.23676 466.28419 666.43682 464.68403 666.43682 c
463.75058 666.43682 462.88403 666.23669 462.08409 665.83672 C
462.88403 666.23669 463.78403 665.47020 464.78409 663.53669 c
465.78416 661.60346 466.71732 659.23682 467.58416 656.43676 c
468.45071 653.63669 469.15058 650.90353 469.68406 648.23669 c
470.21726 645.57014 470.48400 643.70353 470.48400 642.63685 C
489.88403 654.03694 L
491.75065 658.57011 492.68409 663.37002 492.68409 668.43694 c
@c
405.08391 676.83685 m
405.08391 679.23694 404.28397 680.43685 402.68409 680.43685 c
402.28413 680.43685 401.51735 679.97027 400.38406 679.03682 c
399.25077 678.10337 398.05058 677.03669 396.78406 675.83679 c
395.51726 674.63688 394.38397 673.47014 393.38391 672.33685 c
392.38413 671.20356 391.88409 670.43679 391.88409 670.03682 c
391.88409 669.50362 392.75065 669.23688 394.48403 669.23688 c
394.88400 669.23688 395.65077 669.53679 396.78406 670.13688 c
397.91735 670.73669 399.08409 671.47030 400.28400 672.33685 c
401.48391 673.20340 402.58403 674.07024 403.58409 674.93679 c
404.58416 675.80362 405.08391 676.43688 405.08391 676.83685 c
@c
457.68416 664.23685 m
455.68403 665.43676 453.68419 667.33682 451.68406 669.93676 c
449.68394 672.53669 447.61748 674.30353 445.48413 675.23669 c
440.68394 678.43672 437.08394 680.03688 434.68413 680.03688 c
433.75068 680.03688 432.45071 679.63691 430.78394 678.83669 c
429.11745 678.03676 427.41723 677.10359 425.68413 676.03691 c
423.95074 674.97024 422.25080 673.97017 420.58403 673.03672 c
418.91726 672.10356 417.61729 671.43685 416.68413 671.03688 c
414.95074 670.23694 412.88400 669.10337 410.48391 667.63672 c
408.08409 666.17008 405.95074 665.43676 404.08413 665.43676 c
403.01745 665.43676 401.61742 665.53682 399.88403 665.73694 c
398.15065 665.93679 396.45071 666.20353 394.78394 666.53688 c
393.11745 666.87024 391.68397 667.27020 390.48406 667.73679 c
389.28387 668.20337 388.68406 668.70340 388.68406 669.23688 c
388.68406 671.63669 390.78397 674.23691 394.98406 677.03669 c
399.18387 679.83676 403.81739 684.10346 408.88403 689.83682 c
411.15061 692.23691 413.61732 693.83679 416.28416 694.63672 c
418.01726 695.30343 420.48397 696.57024 423.68400 698.43685 c
426.88403 700.30346 429.35074 701.63688 431.08413 702.43682 C
427.61735 704.30343 425.55061 705.23688 424.88391 705.23688 c
421.01745 705.23688 416.85080 704.93698 412.38397 704.33688 c
407.91742 703.73679 404.21735 702.97030 401.28406 702.03685 C
401.01732 702.03685 399.58413 701.37014 396.98391 700.03672 c
394.38397 698.70359 391.51729 697.30356 388.38387 695.83691 c
385.25074 694.37027 382.28400 693.00340 379.48394 691.73688 c
376.68387 690.47008 374.95077 689.83682 374.28406 689.83682 c
373.75058 689.83682 373.01726 689.97005 372.08409 690.23679 c
371.15065 690.50353 370.41732 690.63676 369.88413 690.63676 c
369.21742 690.63676 368.18391 690.70337 366.78387 690.83688 c
365.38413 690.97011 364.35061 691.03672 363.68391 691.03672 c
359.95068 691.03672 355.68397 692.43676 350.88406 695.23682 C
345.81742 684.57005 343.28409 675.03685 343.28409 666.63694 c
343.28409 664.23685 343.48394 661.03682 343.88391 657.03685 C
359.88406 652.23694 l
360.68400 652.10343 361.68406 651.90359 362.88397 651.63685 c
364.08387 651.37011 365.25061 651.03676 366.38391 650.63679 c
367.51720 650.23682 368.51726 649.77024 369.38409 649.23676 c
370.25065 648.70356 370.68406 648.10346 370.68406 647.43676 C
372.55068 647.43676 374.45074 646.70343 376.38397 645.23679 c
378.31720 643.77014 379.81729 642.10337 380.88397 640.23676 C
383.28406 643.43679 386.81745 645.03694 391.48413 645.03694 c
394.01745 645.03694 396.41726 643.70353 398.68413 641.03669 C
402.41735 643.70353 404.95068 645.03694 406.28409 645.03694 c
408.41745 645.03694 410.18400 644.33679 411.58403 642.93676 c
412.98406 641.53672 413.68394 639.83679 413.68394 637.83694 C
414.21742 637.83694 415.71723 637.10334 418.18394 635.63669 c
420.65065 634.17005 423.28403 632.57017 426.08409 630.83679 c
428.88416 629.10340 431.51726 627.50353 433.98397 626.03688 c
436.45068 624.57024 437.95077 623.83691 438.48397 623.83691 c
439.41742 623.83691 440.48409 624.43672 441.68400 625.63691 c
442.88391 626.83682 443.48400 628.10334 443.48400 629.43676 C
442.68406 630.50343 441.35065 631.97008 439.48403 633.83669 c
437.61742 635.70359 435.75080 637.63682 433.88391 639.63694 c
432.01729 641.63679 430.35080 643.57002 428.88416 645.43691 c
427.41723 647.30353 426.68391 648.83679 426.68391 650.03669 c
426.68391 650.17020 426.85058 650.47011 427.18394 650.93669 c
427.51729 651.40356 427.75058 651.63685 427.88409 651.63685 c
428.28406 651.63685 429.28413 650.73685 430.88400 648.93685 c
432.48416 647.13685 434.28416 645.10356 436.28400 642.83669 c
438.28413 640.57011 440.18391 638.40359 441.98391 636.33685 c
443.78391 634.27011 445.01726 632.97014 445.68397 632.43666 c
447.15061 630.57005 448.08406 629.63688 448.48403 629.63688 c
449.55071 629.63688 451.05080 630.37020 452.98403 631.83685 c
454.91726 633.30350 455.88416 635.30334 455.88416 637.83694 c
455.88416 640.50350 454.81748 643.30356 452.68413 646.23685 c
450.55077 649.17014 447.75071 651.50334 444.28394 653.23672 c
441.48416 654.83688 440.08413 656.43676 440.08413 658.03691 c
440.08413 658.43688 440.25080 658.87002 440.58416 659.33688 c
440.91751 659.80346 441.21742 660.03676 441.48416 660.03676 c
441.88413 660.03676 442.35071 659.73685 442.88391 659.13676 c
443.41739 658.53694 443.75074 658.17014 443.88397 658.03691 c
448.01745 655.10362 451.01735 652.63691 452.88397 650.63679 c
454.75058 648.63694 456.15061 646.50359 457.08406 644.23672 c
458.01751 641.83691 459.01729 640.23676 460.08397 639.43682 c
461.15065 638.63688 462.41745 638.23691 463.88409 638.23691 c
464.55080 638.23691 465.38419 638.73694 466.38397 639.73672 c
467.38403 640.73679 467.88406 641.57017 467.88406 642.23688 c
467.88406 647.17002 466.91745 651.60340 464.98394 655.53676 c
463.05071 659.47011 460.61745 662.37024 457.68416 664.23685 c
@c
430.88400 624.03676 m
426.88403 628.03672 423.88413 630.03685 421.88400 630.03685 C
418.68397 624.03676 L
421.88400 621.63666 424.61745 620.43676 426.88403 620.43676 c
427.95071 620.43676 428.75065 620.63688 429.28413 621.03685 c
429.81732 621.43682 430.35080 622.43688 430.88400 624.03676 C
@c
410.88416 638.63688 m
410.88416 639.30359 410.45074 640.13669 409.58391 641.13676 c
408.71735 642.13682 407.88397 642.63685 407.08403 642.63685 c
406.01735 642.63685 404.71739 642.00359 403.18413 640.73679 c
401.65058 639.47027 400.88409 638.50337 400.88409 637.83694 c
400.88409 637.03672 401.45074 636.07011 402.58403 634.93682 c
403.71732 633.80353 404.81745 633.23688 405.88413 633.23688 c
406.68406 633.23688 407.71729 633.90359 408.98409 635.23672 c
410.25061 636.57014 410.88416 637.70343 410.88416 638.63688 c
@c
419.08394 631.83685 m
419.08394 632.37005 418.58391 633.00359 417.58413 633.73691 c
416.58406 634.47024 415.61745 634.83676 414.68400 634.83676 c
414.01729 634.83676 413.05068 634.10343 411.78416 632.63679 c
410.51735 631.17014 409.88409 630.10346 409.88409 629.43676 c
409.88409 628.10334 410.35068 626.97005 411.28413 626.03688 c
412.21729 625.10343 413.21735 624.63685 414.28403 624.63685 c
415.48394 624.63685 416.58406 625.50340 417.58413 627.23679 c
418.58391 628.97017 419.08394 630.50343 419.08394 631.83685 c
@c
413.88406 622.43688 m
410.81726 623.10359 408.75080 624.63685 407.68413 627.03666 C
403.68387 622.83685 L
403.95061 620.03679 405.28403 618.63676 407.68413 618.63676 c
409.41723 618.63676 411.48397 619.90356 413.88406 622.43688 C
@c
395.48409 639.03685 m
395.48409 641.17020 394.15068 642.23688 391.48413 642.23688 c
390.15071 642.23688 388.65061 641.87008 386.98413 641.13676 c
385.31735 640.40343 384.48397 639.70356 384.48397 639.03685 c
384.48397 638.37014 385.15068 637.40353 386.48409 636.13672 c
387.81723 634.87020 389.01742 634.23666 390.08409 634.23666 c
391.15077 634.23666 392.31723 634.77014 393.58403 635.83682 c
394.85055 636.90350 395.48409 637.97017 395.48409 639.03685 c
@c
400.48413 624.03676 m
406.08397 630.63666 L
403.15068 631.57011 401.25061 632.43666 400.38406 633.23688 c
399.51723 634.03682 398.75074 635.23672 398.08403 636.83688 C
391.88409 630.03685 L
392.55080 628.70343 393.75071 627.40346 395.48409 626.13666 c
397.21748 624.87014 398.88397 624.17027 400.48413 624.03676 C
@c
389.28387 631.63672 m
384.88394 634.03682 382.68397 635.83682 382.68397 637.03672 C
380.08403 635.43685 L
380.08403 634.23666 380.65068 632.97014 381.78397 631.63672 c
382.91726 630.30359 383.95077 629.63688 384.88394 629.63688 c
386.08413 629.63688 387.55077 630.30359 389.28387 631.63672 C
@c
347.88387 696.63685 m
341.28397 699.43691 L
333.41726 691.57020 329.48391 680.57008 329.48391 666.43682 c
329.48391 663.90350 329.68403 661.93682 330.08400 660.53679 c
330.48397 659.13676 331.15068 658.10353 332.08384 657.43682 c
333.01729 656.77011 334.25065 656.30353 335.78391 656.03679 c
337.31717 655.77005 339.15061 655.50359 341.28397 655.23685 C
340.48403 657.23669 340.08406 661.03682 340.08406 666.63694 c
340.08406 671.83682 340.61726 676.60356 341.68394 680.93688 c
342.75061 685.27020 344.81735 690.50353 347.88387 696.63685 C
@c
377.88406 640.03691 m
377.88406 640.97008 377.11729 642.07020 375.58403 643.33672 c
374.05077 644.60353 372.35055 645.23679 370.48394 645.23679 C
370.61745 645.50353 370.51739 645.33685 370.18403 644.73676 c
369.85068 644.13694 369.55077 643.43679 369.28403 642.63685 C
369.28403 641.43694 369.71745 640.40343 370.58400 639.53688 c
371.45055 638.67005 372.41745 638.23691 373.48413 638.23691 c
376.41742 638.23691 377.88406 638.83672 377.88406 640.03691 c
@c
326.93924 659.56280 m
326.93924 660.49625 326.60589 661.32935 325.93918 662.06268 c
325.27247 662.79600 324.47254 663.16280 323.53909 663.16280 c
322.60564 663.16280 321.80457 662.79515 321.13899 662.06268 c
320.47342 661.33049 320.13921 660.49625 320.13921 659.56280 c
320.13921 657.69619 321.27279 656.76274 323.53909 656.76274 c
325.80539 656.76274 326.93924 657.69619 326.93924 659.56280 c
@c
316.13924 662.76283 m
316.13924 663.69600 315.80589 664.52939 315.13918 665.26271 c
314.47247 665.99603 313.67254 666.36283 312.73909 666.36283 c
311.80564 666.36283 311.00457 665.99518 310.33899 665.26271 c
309.67342 664.53052 309.33921 663.69600 309.33921 662.76283 c
309.33921 660.62948 310.47279 659.56280 312.73909 659.56280 c
315.00539 659.56280 316.13924 660.62948 316.13924 662.76283 c
@c
B

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel3Dict 3.0 0
%%EOF
